<?xml version="1.0" encoding="utf-8"?>
<TestRun id="d0512d62-bc26-4527-a3c0-03d930b1ddcd" name="@tigger 2025-09-20 15:27:14" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2025-09-20T15:27:14.8855110+02:00" queuing="2025-09-20T15:27:14.8855110+02:00" start="2025-09-20T15:27:13.2973440+02:00" finish="2025-09-20T15:27:20.2535020+02:00" />
  <TestSettings name="default" id="420f8c93-bff2-45c9-83c9-b8bd3904b1bb">
    <Deployment runDeploymentRoot="_tigger_2025-09-20_15_27_14" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="61fd6de0-e96e-4141-a7aa-3caadeae08cc" testId="c9425ab3-a691-6f3b-546b-bdd2fccda3c6" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.PerformanceConcurrencyIntegrationTests.SourceGenerator_HighVolumeOperations_PerformanceOptimal" computerName="tigger" duration="00:00:00.3674138" startTime="2025-09-20T15:27:15.0649970+02:00" endTime="2025-09-20T15:27:15.4324590+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="61fd6de0-e96e-4141-a7aa-3caadeae08cc">
      <Output>
        <StdOut>✅ High volume test passed! 200 requests, 0 hits (0,0 %), completed in 66ms
   Method calls: Process=100, Calculate=100</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="dd8e862b-45cd-4f76-8cde-82ccf9925a7b" testId="bcad10c5-0119-ef14-3997-f3e0487007aa" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.ParameterTypeIntegrationTests.SourceGenerator_PrimitiveParameterTypes_Works" computerName="tigger" duration="00:00:00.3035514" startTime="2025-09-20T15:27:14.8120640+02:00" endTime="2025-09-20T15:27:15.0953180+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dd8e862b-45cd-4f76-8cde-82ccf9925a7b">
      <Output>
        <StdOut>✅ Primitive parameter types test passed! Caching works with int, string, DateTime, enum, etc.</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a4255a74-6343-4dc8-8e05-24e24acdc591" testId="13e377db-62ea-8913-66a2-e737e3da0666" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.BasicCachingIntegrationTests.SourceGenerator_TagBasedInvalidation_Works" computerName="tigger" duration="00:00:01.2782006" startTime="2025-09-20T15:27:13.6300560+02:00" endTime="2025-09-20T15:27:14.9096390+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a4255a74-6343-4dc8-8e05-24e24acdc591">
      <Output>
        <StdOut>✅ Tag-based invalidation test passed! Final metrics - Hits: 2, Misses: 4</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="77b188b0-9610-4f20-ae10-e139f8ebc144" testId="8fdcfc54-962d-e05f-16c2-f84c84688da2" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.ReturnTypeVariationsIntegrationTests.SourceGenerator_NullableReturnTypes_Works" computerName="tigger" duration="00:00:05.2827548" startTime="2025-09-20T15:27:14.8124980+02:00" endTime="2025-09-20T15:27:20.0939000+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="77b188b0-9610-4f20-ae10-e139f8ebc144">
      <Output>
        <StdOut>✅ Nullable return types test passed! Caching works with nullable types including null values</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b04f276c-de6c-4f44-818a-d6ccb2ee857f" testId="f09b4a96-f714-a0e0-4380-92992fbf9f1d" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests.SourceGenerator_ExceptionHandling_DoesNotCacheExceptions" computerName="tigger" duration="00:00:00.0836116" startTime="2025-09-20T15:27:15.1879290+02:00" endTime="2025-09-20T15:27:15.2673710+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b04f276c-de6c-4f44-818a-d6ccb2ee857f">
      <Output>
        <ErrorInfo>
          <Message>System.InvalidOperationException : Task type System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[System.String,MethodCache.SourceGenerator.IntegrationTests.Infrastructure.TestMockCacheManager+&lt;GetOrCreateAsync&gt;d__3`1[System.String]] is not compatible with expected type Task&lt;String&gt;</Message>
          <StackTrace>   at MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests.GetTaskResult[T](Task task) in /Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/Tests/ErrorHandlingIntegrationTests.cs:line 492
   at MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests.SourceGenerator_ExceptionHandling_DoesNotCacheExceptions() in /Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/Tests/ErrorHandlingIntegrationTests.cs:line 107
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="02742959-ad77-408f-b0b1-56a03988ec32" testId="a87e77e0-7f28-ecf5-b0ca-7cfe82635660" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.AdvancedCachingIntegrationTests.SourceGenerator_ComplexServiceInteractions_Works" computerName="tigger" duration="00:00:00.1737674" startTime="2025-09-20T15:27:16.3933980+02:00" endTime="2025-09-20T15:27:16.5671890+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="02742959-ad77-408f-b0b1-56a03988ec32">
      <Output>
        <StdOut>✅ Multi-service integration test passed! Final metrics - Hits: 2, Misses: 4</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="945ca1b3-f603-4483-bc41-6bfeb6333b29" testId="bb722e2f-c11e-4a1c-83d4-b0876e521566" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.ReturnTypeVariationsIntegrationTests.SourceGenerator_ValueTaskReturnTypes_Works" computerName="tigger" duration="00:00:00.1078751" startTime="2025-09-20T15:27:20.0940540+02:00" endTime="2025-09-20T15:27:20.2019800+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="945ca1b3-f603-4483-bc41-6bfeb6333b29">
      <Output>
        <StdOut>✅ ValueTask return types test passed! Caching works with ValueTask&lt;T&gt;</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b4b70d78-3295-4336-a992-fc349565f500" testId="1f7ba3f5-4b35-ad8d-91ec-128326fac211" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.ReturnTypeVariationsIntegrationTests.SourceGenerator_CollectionReturnTypes_Works" computerName="tigger" duration="00:00:00.4823232" startTime="2025-09-20T15:27:14.3248950+02:00" endTime="2025-09-20T15:27:14.8122420+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b4b70d78-3295-4336-a992-fc349565f500">
      <Output>
        <StdOut>✅ Collection return types test passed! Caching works with List&lt;T&gt;, arrays, etc.</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="54ffb153-2512-4b60-82eb-eab3ed96705d" testId="05dcc751-6e04-47e8-af13-418ea60e2c45" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.ConfigurationIntegrationTests.SourceGenerator_CustomKeyGenerator_Works" computerName="tigger" duration="00:00:01.0681641" startTime="2025-09-20T15:27:13.7496950+02:00" endTime="2025-09-20T15:27:14.8174830+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="54ffb153-2512-4b60-82eb-eab3ed96705d">
      <Output>
        <StdOut>✅ Custom key generator test passed! Metrics - Hits: 2, Misses: 3</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f57262e4-ca99-46a1-92fd-4a329a185929" testId="e07d12a4-7c0a-7190-fb0d-aa72ac20571c" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.ConfigurationIntegrationTests.SourceGenerator_ConditionalCaching_Works" computerName="tigger" duration="00:00:00.0964817" startTime="2025-09-20T15:27:13.6300670+02:00" endTime="2025-09-20T15:27:13.7328740+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f57262e4-ca99-46a1-92fd-4a329a185929" />
    <UnitTestResult executionId="58c42749-d3d7-45ef-bb5a-b476cd0656c9" testId="c60e4834-caed-b9f4-25f0-5706ca4910f5" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.ConfigurationIntegrationTests.SourceGenerator_SerializationConfiguration_Works" computerName="tigger" duration="00:00:00.0143337" startTime="2025-09-20T15:27:13.7467450+02:00" endTime="2025-09-20T15:27:13.7489790+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="58c42749-d3d7-45ef-bb5a-b476cd0656c9" />
    <UnitTestResult executionId="8000ed75-3eca-42f7-9642-ad94d2822e99" testId="73bd7da3-b2a5-7f60-35b2-d708300a26b4" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.InheritanceIntegrationTests.SourceGenerator_SimpleInheritance_Works" computerName="tigger" duration="00:00:01.1787660" startTime="2025-09-20T15:27:13.6293190+02:00" endTime="2025-09-20T15:27:14.8123810+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8000ed75-3eca-42f7-9642-ad94d2822e99">
      <Output>
        <StdOut>✅ Simple inheritance test passed! Basic caching and invalidation works</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="db9cb4e3-b9ca-4ddf-aff5-3a8123057e08" testId="578b2d83-7f94-4ed6-3241-fa14aa0509b2" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.PerformanceConcurrencyIntegrationTests.SourceGenerator_ConcurrentAccess_HandledCorrectly" computerName="tigger" duration="00:00:00.2728028" startTime="2025-09-20T15:27:14.8121710+02:00" endTime="2025-09-20T15:27:15.0648510+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="db9cb4e3-b9ca-4ddf-aff5-3a8123057e08">
      <Output>
        <StdOut>✅ Concurrent access test passed! 10 requests completed in 53ms (should be ~50ms)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="53833430-d797-4189-ac0b-a2e174c6feb3" testId="cdd3b638-2ef0-322b-3bcc-493762ed5160" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.CustomKeyGeneratorIntegrationTests.SourceGenerator_KeyGeneratorWithDifferentParameters_Works" computerName="tigger" duration="00:00:01.1762752" startTime="2025-09-20T15:27:13.6300880+02:00" endTime="2025-09-20T15:27:14.8123490+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="53833430-d797-4189-ac0b-a2e174c6feb3">
      <Output>
        <StdOut>✅ Parameter-sensitive key generator test passed! Parameter order creates different cache keys</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="27aab760-8723-4cc5-87ff-cb9f9d71ecf0" testId="21408146-97a3-fe04-1a2f-0cdc7fcd7eed" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.GenericMethodIntegrationTests.SourceGenerator_GenericServiceInterface_Works" computerName="tigger" duration="00:00:00.1579393" startTime="2025-09-20T15:27:19.8467670+02:00" endTime="2025-09-20T15:27:20.0040540+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="27aab760-8723-4cc5-87ff-cb9f9d71ecf0">
      <Output>
        <StdOut>✅ Generic service interface test passed! Caching works independently for different generic types</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="92605314-ad02-40ed-b1e6-1a44b72f6b7a" testId="c59d35c0-3312-f6db-c4f0-b18e6588d5bd" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.InheritanceIntegrationTests.SourceGenerator_MultipleInterfaceImplementation_Works" computerName="tigger" duration="00:00:00.2902127" startTime="2025-09-20T15:27:14.8125830+02:00" endTime="2025-09-20T15:27:15.1014540+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="92605314-ad02-40ed-b1e6-1a44b72f6b7a">
      <Output>
        <StdOut>✅ Multiple interface implementation test passed! Caching works independently across interfaces</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="55a13be0-f8d9-4f93-8dd6-ef14e92f2988" testId="8c5d45a6-2f3a-e260-a75c-d71a31d6bac2" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.AdvancedCachingIntegrationTests.SourceGenerator_CacheDuration_Works" computerName="tigger" duration="00:00:01.3313857" startTime="2025-09-20T15:27:15.0615700+02:00" endTime="2025-09-20T15:27:16.3931020+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="55a13be0-f8d9-4f93-8dd6-ef14e92f2988">
      <Output>
        <StdOut>✅ Cache duration test passed! Short cache expired, long cache persisted</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="be419a97-8f42-423d-9800-ac27582f0949" testId="7d985252-01f5-d943-e761-8ba11d2c739e" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.SimpleIntegrationTest.SourceGenerator_BasicCompilation_Works" computerName="tigger" duration="00:00:01.1084975" startTime="2025-09-20T15:27:13.6300350+02:00" endTime="2025-09-20T15:27:14.7436780+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="be419a97-8f42-423d-9800-ac27582f0949">
      <Output>
        <StdOut>=== GENERATED SOURCES ===

--- ISimpleServiceDecorator.g.cs ---
// &lt;auto-generated/&gt;
#nullable enable
#pragma warning disable CS8019 // Unnecessary using directive
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using MethodCache.Core;
using MethodCache.Core.Configuration;
using Microsoft.Extensions.DependencyInjection;

namespace TestNamespace
{
    [System.CodeDom.Compiler.GeneratedCode("MethodCacheGenerator", "1.0.0")]
    [System.Diagnostics.DebuggerNonUserCode]
    public class ISimpleServiceDecorator : TestNamespace.ISimpleService
    {
        private readonly global::TestNamespace.ISimpleService _decorated;
        private readonly ICacheManager _cacheManager;
        private readonly MethodCacheConfiguration _configuration;
        private readonly IServiceProvider _serviceProvider;
        private readonly ICacheKeyGenerator _keyGenerator;

        public ISimpleServiceDecorator(
            global::TestNamespace.ISimpleService decorated,
            ICacheManager cacheManager,
            MethodCacheConfiguration configuration,
            IServiceProvider serviceProvider)
        {
            _decorated = decorated ?? throw new ArgumentNullException(nameof(decorated));
            _cacheManager = cacheManager ?? throw new ArgumentNullException(nameof(cacheManager));
            _configuration = configuration ?? throw new ArgumentNullException(nameof(configuration));
            _serviceProvider = serviceProvider ?? throw new ArgumentNullException(nameof(serviceProvider));
            _keyGenerator = serviceProvider.GetRequiredService&lt;ICacheKeyGenerator&gt;();
        }

        public System.Threading.Tasks.Task&lt;string&gt; GetDataAsync(string key)
        {
            var args = new object[] { key };
            var settings = _configuration.GetMethodSettings("TestNamespace.ISimpleService.GetDataAsync");
            return _cacheManager.GetOrCreateAsync&lt;string&gt;(
                "GetDataAsync",
                args,
                async () =&gt; await _decorated.GetDataAsync(key).ConfigureAwait(false),
                settings,
                _keyGenerator,
                settings.IsIdempotent);
        }

    }
}
#pragma warning restore CS8019


--- CacheMethodRegistry.g.cs ---
// &lt;auto-generated/&gt;
#nullable enable
using System.Runtime.CompilerServices;
using MethodCache.Core;
using MethodCache.Core.Configuration;
using MethodCache.Core.Configuration.Fluent;

namespace MethodCache.Core
{
    internal class GeneratedCacheMethodRegistry : ICacheMethodRegistry
    {
        public void RegisterMethods(IMethodCacheConfiguration config)
        {
            config.ApplyFluent(fluent =&gt;
            {
                fluent.ForService&lt;TestNamespace.ISimpleService&gt;()
                    .Method(x =&gt; x.GetDataAsync(Any&lt;string&gt;.Value))
                    .Configure(options =&gt;
                    {
                        options.WithDuration(System.TimeSpan.Parse("00:01:00"));
                    });
            });
        }
    }

    internal static class ModuleInitializer
    {
        [ModuleInitializer]
        internal static void Initialize()
        {
            CacheMethodRegistry.SetRegistry(new GeneratedCacheMethodRegistry());
        }
    }
}


--- MethodCacheServiceCollectionExtensions.g.cs ---
// &lt;auto-generated/&gt;
#nullable enable
using System;
using Microsoft.Extensions.DependencyInjection;
using MethodCache.Core;
using MethodCache.Core.Configuration;

namespace Microsoft.Extensions.DependencyInjection
{
    public static class MethodCacheServiceCollectionExtensions
    {
        public static IServiceCollection AddISimpleServiceWithCaching(
            this IServiceCollection services,
            Func&lt;IServiceProvider, global::TestNamespace.ISimpleService&gt; implementationFactory)
        {
            return services.AddSingleton&lt;global::TestNamespace.ISimpleService&gt;(sp =&gt;
                new TestNamespace.ISimpleServiceDecorator(
                    implementationFactory(sp),
                    sp.GetRequiredService&lt;ICacheManager&gt;(),
                    sp.GetRequiredService&lt;MethodCacheConfiguration&gt;(),
                    sp));
        }

        public static IServiceCollection AddISimpleServiceWithCachingSingleton(
            this IServiceCollection services,
            Func&lt;IServiceProvider, global::TestNamespace.ISimpleService&gt; implementationFactory)
        {
            return services.AddSingleton&lt;global::TestNamespace.ISimpleService&gt;(sp =&gt;
                new TestNamespace.ISimpleServiceDecorator(
                    implementationFactory(sp),
                    sp.GetRequiredService&lt;ICacheManager&gt;(),
                    sp.GetRequiredService&lt;MethodCacheConfiguration&gt;(),
                    sp));
        }

        public static IServiceCollection AddISimpleServiceWithCachingScoped(
            this IServiceCollection services,
            Func&lt;IServiceProvider, global::TestNamespace.ISimpleService&gt; implementationFactory)
        {
            return services.AddScoped&lt;global::TestNamespace.ISimpleService&gt;(sp =&gt;
                new TestNamespace.ISimpleServiceDecorator(
                    implementationFactory(sp),
                    sp.GetRequiredService&lt;ICacheManager&gt;(),
                    sp.GetRequiredService&lt;MethodCacheConfiguration&gt;(),
                    sp));
        }

        public static IServiceCollection AddISimpleServiceWithCachingTransient(
            this IServiceCollection services,
            Func&lt;IServiceProvider, global::TestNamespace.ISimpleService&gt; implementationFactory)
        {
            return services.AddTransient&lt;global::TestNamespace.ISimpleService&gt;(sp =&gt;
                new TestNamespace.ISimpleServiceDecorator(
                    implementationFactory(sp),
                    sp.GetRequiredService&lt;ICacheManager&gt;(),
                    sp.GetRequiredService&lt;MethodCacheConfiguration&gt;(),
                    sp));
        }

    }
}

✅ Basic compilation test passed! Generated 3 source files</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a7814674-2f7f-422a-87f6-4d7eda5737d1" testId="c94b0896-4ef9-1852-0594-ab0bb6f778ef" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.CustomKeyGeneratorIntegrationTests.SourceGenerator_CustomKeyGenerator_Works" computerName="tigger" duration="00:00:00.2495045" startTime="2025-09-20T15:27:14.8125630+02:00" endTime="2025-09-20T15:27:15.0611910+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a7814674-2f7f-422a-87f6-4d7eda5737d1">
      <Output>
        <StdOut>✅ Custom key generator test passed! Different key generators work independently</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f430a5af-5714-4b13-b7d1-77122b243a40" testId="b371d2a9-f83b-9810-67c5-e5bb550a10af" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.BasicCachingIntegrationTests.SourceGenerator_BasicCaching_Works" computerName="tigger" duration="00:00:00.4184943" startTime="2025-09-20T15:27:14.9401680+02:00" endTime="2025-09-20T15:27:15.3279550+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f430a5af-5714-4b13-b7d1-77122b243a40">
      <Output>
        <StdOut>=== GENERATED SOURCES ===

--- IUserServiceDecorator.g.cs ---
// &lt;auto-generated/&gt;
#nullable enable
#pragma warning disable CS8019 // Unnecessary using directive
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using MethodCache.Core;
using MethodCache.Core.Configuration;
using Microsoft.Extensions.DependencyInjection;

namespace TestNamespace
{
    [System.CodeDom.Compiler.GeneratedCode("MethodCacheGenerator", "1.0.0")]
    [System.Diagnostics.DebuggerNonUserCode]
    public class IUserServiceDecorator : TestNamespace.IUserService
    {
        private readonly global::TestNamespace.IUserService _decorated;
        private readonly ICacheManager _cacheManager;
        private readonly MethodCacheConfiguration _configuration;
        private readonly IServiceProvider _serviceProvider;
        private readonly ICacheKeyGenerator _keyGenerator;

        public IUserServiceDecorator(
            global::TestNamespace.IUserService decorated,
            ICacheManager cacheManager,
            MethodCacheConfiguration configuration,
            IServiceProvider serviceProvider)
        {
            _decorated = decorated ?? throw new ArgumentNullException(nameof(decorated));
            _cacheManager = cacheManager ?? throw new ArgumentNullException(nameof(cacheManager));
            _configuration = configuration ?? throw new ArgumentNullException(nameof(configuration));
            _serviceProvider = serviceProvider ?? throw new ArgumentNullException(nameof(serviceProvider));
            _keyGenerator = serviceProvider.GetRequiredService&lt;ICacheKeyGenerator&gt;();
        }

        public System.Threading.Tasks.Task&lt;TestNamespace.User&gt; GetUserAsync(int id)
        {
            var args = new object[] { id };
            var settings = _configuration.GetMethodSettings("TestNamespace.IUserService.GetUserAsync");
            return _cacheManager.GetOrCreateAsync&lt;TestNamespace.User&gt;(
                "GetUserAsync",
                args,
                async () =&gt; await _decorated.GetUserAsync(id).ConfigureAwait(false),
                settings,
                _keyGenerator,
                settings.IsIdempotent);
        }

        public System.Threading.Tasks.Task&lt;int&gt; GetUserCountAsync()
        {
            var args = new object[] { };
            var settings = _configuration.GetMethodSettings("TestNamespace.IUserService.GetUserCountAsync");
            return _cacheManager.GetOrCreateAsync&lt;int&gt;(
                "GetUserCountAsync",
                args,
                async () =&gt; await _decorated.GetUserCountAsync().ConfigureAwait(false),
                settings,
                _keyGenerator,
                settings.IsIdempotent);
        }

        public System.Threading.Tasks.Task UpdateUserAsync(TestNamespace.User user)
        {
            try
            {
                var result = _decorated.UpdateUserAsync(user);
                var allTags = new List&lt;string&gt;();
                allTags.AddRange(new[] { "users", "usercount" });
                _cacheManager.InvalidateByTagsAsync(allTags.ToArray()).GetAwaiter().GetResult();
                return result;
            }
            catch
            {
                // Don't invalidate cache on failure
                throw;
            }
        }

    }
}
#pragma warning restore CS8019


--- CacheMethodRegistry.g.cs ---
// &lt;auto-generated/&gt;
#nullable enable
using System.Runtime.CompilerServices;
using MethodCache.Core;
using MethodCache.Core.Configuration;
using MethodCache.Core.Configuration.Fluent;

namespace MethodCache.Core
{
    internal class GeneratedCacheMethodRegistry : ICacheMethodRegistry
    {
        public void RegisterMethods(IMethodCacheConfiguration config)
        {
            config.ApplyFluent(fluent =&gt;
            {
                fluent.ForService&lt;TestNamespace.IUserService&gt;()
                    .Method(x =&gt; x.GetUserAsync(Any&lt;int&gt;.Value))
                    .Configure(options =&gt;
                    {
                        options.WithDuration(System.TimeSpan.Parse("00:01:00"));
                        options.WithTags("users");
                    });
                fluent.ForService&lt;TestNamespace.IUserService&gt;()
                    .Method(x =&gt; x.GetUserCountAsync())
                    .Configure(options =&gt;
                    {
                        options.WithDuration(System.TimeSpan.Parse("00:02:00"));
                        options.WithTags("users", "usercount");
                    });
            });
        }
    }

    internal static class ModuleInitializer
    {
        [ModuleInitializer]
        internal static void Initialize()
        {
            CacheMethodRegistry.SetRegistry(new GeneratedCacheMethodRegistry());
        }
    }
}


--- MethodCacheServiceCollectionExtensions.g.cs ---
// &lt;auto-generated/&gt;
#nullable enable
using System;
using Microsoft.Extensions.DependencyInjection;
using MethodCache.Core;
using MethodCache.Core.Configuration;

namespace Microsoft.Extensions.DependencyInjection
{
    public static class MethodCacheServiceCollectionExtensions
    {
        public static IServiceCollection AddIUserServiceWithCaching(
            this IServiceCollection services,
            Func&lt;IServiceProvider, global::TestNamespace.IUserService&gt; implementationFactory)
        {
            return services.AddSingleton&lt;global::TestNamespace.IUserService&gt;(sp =&gt;
                new TestNamespace.IUserServiceDecorator(
                    implementationFactory(sp),
                    sp.GetRequiredService&lt;ICacheManager&gt;(),
                    sp.GetRequiredService&lt;MethodCacheConfiguration&gt;(),
                    sp));
        }

        public static IServiceCollection AddIUserServiceWithCachingSingleton(
            this IServiceCollection services,
            Func&lt;IServiceProvider, global::TestNamespace.IUserService&gt; implementationFactory)
        {
            return services.AddSingleton&lt;global::TestNamespace.IUserService&gt;(sp =&gt;
                new TestNamespace.IUserServiceDecorator(
                    implementationFactory(sp),
                    sp.GetRequiredService&lt;ICacheManager&gt;(),
                    sp.GetRequiredService&lt;MethodCacheConfiguration&gt;(),
                    sp));
        }

        public static IServiceCollection AddIUserServiceWithCachingScoped(
            this IServiceCollection services,
            Func&lt;IServiceProvider, global::TestNamespace.IUserService&gt; implementationFactory)
        {
            return services.AddScoped&lt;global::TestNamespace.IUserService&gt;(sp =&gt;
                new TestNamespace.IUserServiceDecorator(
                    implementationFactory(sp),
                    sp.GetRequiredService&lt;ICacheManager&gt;(),
                    sp.GetRequiredService&lt;MethodCacheConfiguration&gt;(),
                    sp));
        }

        public static IServiceCollection AddIUserServiceWithCachingTransient(
            this IServiceCollection services,
            Func&lt;IServiceProvider, global::TestNamespace.IUserService&gt; implementationFactory)
        {
            return services.AddTransient&lt;global::TestNamespace.IUserService&gt;(sp =&gt;
                new TestNamespace.IUserServiceDecorator(
                    implementationFactory(sp),
                    sp.GetRequiredService&lt;ICacheManager&gt;(),
                    sp.GetRequiredService&lt;MethodCacheConfiguration&gt;(),
                    sp));
        }

    }
}

Total generated sources: 3
Found 1 extension types: MethodCacheServiceCollectionExtensions
Found 1 registration methods in MethodCacheServiceCollectionExtensions: AddIUserServiceWithCaching
Method: AddIUserServiceWithCaching, Parameters: IServiceCollection services, Func`2 implementationFactory
Created mock implementation for IUserService
Successfully registered AddIUserServiceWithCaching
✅ Basic caching test passed! Cache is working - methods called only once each.</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a82e4fd4-66e6-4615-afb1-02a00b441f33" testId="719672fb-f0df-ce53-8519-f4c8d1d646bf" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests.SourceGenerator_LargeObjects_HandledCorrectly" computerName="tigger" duration="00:00:00.3586948" startTime="2025-09-20T15:27:14.8189960+02:00" endTime="2025-09-20T15:27:15.1839850+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a82e4fd4-66e6-4615-afb1-02a00b441f33">
      <Output>
        <ErrorInfo>
          <Message>System.InvalidOperationException : Task type System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[System.Collections.Generic.List`1[TestNamespace.Product],MethodCache.SourceGenerator.IntegrationTests.Infrastructure.TestMockCacheManager+&lt;GetOrCreateAsync&gt;d__3`1[System.Collections.Generic.List`1[TestNamespace.Product]]] is not compatible with expected type Task&lt;IList&gt;</Message>
          <StackTrace>   at MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests.GetTaskResult[T](Task task) in /Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/Tests/ErrorHandlingIntegrationTests.cs:line 492
   at MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests.SourceGenerator_LargeObjects_HandledCorrectly() in /Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/Tests/ErrorHandlingIntegrationTests.cs:line 455
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b792ef65-9e26-4543-9b87-a103752fb1f7" testId="02e991a4-ded6-70b2-c856-23a8a412837f" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests.SourceGenerator_NullValues_HandledCorrectly" computerName="tigger" duration="00:00:00.0527762" startTime="2025-09-20T15:27:15.2685610+02:00" endTime="2025-09-20T15:27:15.3203020+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b792ef65-9e26-4543-9b87-a103752fb1f7">
      <Output>
        <ErrorInfo>
          <Message>System.InvalidOperationException : Task type System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[System.String,MethodCache.SourceGenerator.IntegrationTests.Infrastructure.TestMockCacheManager+&lt;GetOrCreateAsync&gt;d__3`1[System.String]] is not compatible with expected type Task&lt;String&gt;</Message>
          <StackTrace>   at MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests.GetTaskResult[T](Task task) in /Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/Tests/ErrorHandlingIntegrationTests.cs:line 492
   at MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests.SourceGenerator_NullValues_HandledCorrectly() in /Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/Tests/ErrorHandlingIntegrationTests.cs:line 233
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a17e2897-7cc4-420e-8b52-9eea83cc484d" testId="6264507a-f2fb-e996-f090-aac908968454" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.ParameterTypeIntegrationTests.SourceGenerator_OptionalAndDefaultParameters_Works" computerName="tigger" duration="00:00:00.1176591" startTime="2025-09-20T15:27:15.0955520+02:00" endTime="2025-09-20T15:27:15.2147010+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a17e2897-7cc4-420e-8b52-9eea83cc484d">
      <Output>
        <StdOut>✅ Optional and default parameters test passed! Caching distinguishes between different optional values</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8af76f63-5376-4c1e-a883-60fc8d3c786d" testId="ca44cf88-5e77-0ca8-9ff7-8a9ae71115ca" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.PerformanceConcurrencyIntegrationTests.SourceGenerator_ParallelBatchOperations_Efficient" computerName="tigger" duration="00:00:00.4567561" startTime="2025-09-20T15:27:15.4325660+02:00" endTime="2025-09-20T15:27:15.8894910+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8af76f63-5376-4c1e-a883-60fc8d3c786d">
      <Output>
        <StdOut>✅ Parallel batch test passed!
   Batch time: 83ms for 40 operations (expected &lt; 1000ms)
   Method calls: Report=24, Metrics=24
   Cache metrics: Hits=0, Misses=48
   Invalidations: 1</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="00145751-1422-487d-a585-2649f9ae47a5" testId="f2ef9898-b5f3-f7ce-6b08-59b814848891" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.ParameterTypeIntegrationTests.SourceGenerator_ComplexParameterTypes_Works" computerName="tigger" duration="00:00:00.0973823" startTime="2025-09-20T15:27:15.2148180+02:00" endTime="2025-09-20T15:27:15.3122810+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="00145751-1422-487d-a585-2649f9ae47a5">
      <Output>
        <StdOut>✅ Complex parameter types test passed! Caching works with objects, arrays, multiple parameters</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b670dd4c-5ff5-45a0-9739-dbe9a79fd352" testId="8a3bf8b1-2509-fbb4-29ee-66958e37330c" testName="MethodCache.SourceGenerator.IntegrationTests.Tests.GenericMethodIntegrationTests.SourceGenerator_GenericMethodsWithConstraints_Works" computerName="tigger" duration="00:00:06.2143843" startTime="2025-09-20T15:27:13.6300780+02:00" endTime="2025-09-20T15:27:19.8456740+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b670dd4c-5ff5-45a0-9739-dbe9a79fd352">
      <Output>
        <StdOut>✅ Generic methods with constraints test passed! Source generation handles generic methods correctly</StdOut>
      </Output>
    </UnitTestResult>
  </Results>
  <TestDefinitions>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.PerformanceConcurrencyIntegrationTests.SourceGenerator_ConcurrentAccess_HandledCorrectly" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="578b2d83-7f94-4ed6-3241-fa14aa0509b2">
      <Execution id="db9cb4e3-b9ca-4ddf-aff5-3a8123057e08" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.PerformanceConcurrencyIntegrationTests" name="SourceGenerator_ConcurrentAccess_HandledCorrectly" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.ReturnTypeVariationsIntegrationTests.SourceGenerator_CollectionReturnTypes_Works" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="1f7ba3f5-4b35-ad8d-91ec-128326fac211">
      <Execution id="b4b70d78-3295-4336-a992-fc349565f500" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.ReturnTypeVariationsIntegrationTests" name="SourceGenerator_CollectionReturnTypes_Works" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.InheritanceIntegrationTests.SourceGenerator_SimpleInheritance_Works" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="73bd7da3-b2a5-7f60-35b2-d708300a26b4">
      <Execution id="8000ed75-3eca-42f7-9642-ad94d2822e99" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.InheritanceIntegrationTests" name="SourceGenerator_SimpleInheritance_Works" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.ReturnTypeVariationsIntegrationTests.SourceGenerator_NullableReturnTypes_Works" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="8fdcfc54-962d-e05f-16c2-f84c84688da2">
      <Execution id="77b188b0-9610-4f20-ae10-e139f8ebc144" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.ReturnTypeVariationsIntegrationTests" name="SourceGenerator_NullableReturnTypes_Works" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.ParameterTypeIntegrationTests.SourceGenerator_OptionalAndDefaultParameters_Works" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="6264507a-f2fb-e996-f090-aac908968454">
      <Execution id="a17e2897-7cc4-420e-8b52-9eea83cc484d" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.ParameterTypeIntegrationTests" name="SourceGenerator_OptionalAndDefaultParameters_Works" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.ReturnTypeVariationsIntegrationTests.SourceGenerator_ValueTaskReturnTypes_Works" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="bb722e2f-c11e-4a1c-83d4-b0876e521566">
      <Execution id="945ca1b3-f603-4483-bc41-6bfeb6333b29" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.ReturnTypeVariationsIntegrationTests" name="SourceGenerator_ValueTaskReturnTypes_Works" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.ParameterTypeIntegrationTests.SourceGenerator_PrimitiveParameterTypes_Works" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="bcad10c5-0119-ef14-3997-f3e0487007aa">
      <Execution id="dd8e862b-45cd-4f76-8cde-82ccf9925a7b" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.ParameterTypeIntegrationTests" name="SourceGenerator_PrimitiveParameterTypes_Works" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.AdvancedCachingIntegrationTests.SourceGenerator_CacheDuration_Works" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="8c5d45a6-2f3a-e260-a75c-d71a31d6bac2">
      <Execution id="55a13be0-f8d9-4f93-8dd6-ef14e92f2988" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.AdvancedCachingIntegrationTests" name="SourceGenerator_CacheDuration_Works" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.GenericMethodIntegrationTests.SourceGenerator_GenericServiceInterface_Works" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="21408146-97a3-fe04-1a2f-0cdc7fcd7eed">
      <Execution id="27aab760-8723-4cc5-87ff-cb9f9d71ecf0" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.GenericMethodIntegrationTests" name="SourceGenerator_GenericServiceInterface_Works" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.PerformanceConcurrencyIntegrationTests.SourceGenerator_HighVolumeOperations_PerformanceOptimal" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="c9425ab3-a691-6f3b-546b-bdd2fccda3c6">
      <Execution id="61fd6de0-e96e-4141-a7aa-3caadeae08cc" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.PerformanceConcurrencyIntegrationTests" name="SourceGenerator_HighVolumeOperations_PerformanceOptimal" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests.SourceGenerator_LargeObjects_HandledCorrectly" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="719672fb-f0df-ce53-8519-f4c8d1d646bf">
      <Execution id="a82e4fd4-66e6-4615-afb1-02a00b441f33" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests" name="SourceGenerator_LargeObjects_HandledCorrectly" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.BasicCachingIntegrationTests.SourceGenerator_BasicCaching_Works" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="b371d2a9-f83b-9810-67c5-e5bb550a10af">
      <Execution id="f430a5af-5714-4b13-b7d1-77122b243a40" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.BasicCachingIntegrationTests" name="SourceGenerator_BasicCaching_Works" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests.SourceGenerator_ExceptionHandling_DoesNotCacheExceptions" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="f09b4a96-f714-a0e0-4380-92992fbf9f1d">
      <Execution id="b04f276c-de6c-4f44-818a-d6ccb2ee857f" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests" name="SourceGenerator_ExceptionHandling_DoesNotCacheExceptions" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.ConfigurationIntegrationTests.SourceGenerator_SerializationConfiguration_Works" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="c60e4834-caed-b9f4-25f0-5706ca4910f5">
      <Execution id="58c42749-d3d7-45ef-bb5a-b476cd0656c9" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.ConfigurationIntegrationTests" name="SourceGenerator_SerializationConfiguration_Works" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.AdvancedCachingIntegrationTests.SourceGenerator_ComplexServiceInteractions_Works" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="a87e77e0-7f28-ecf5-b0ca-7cfe82635660">
      <Execution id="02742959-ad77-408f-b0b1-56a03988ec32" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.AdvancedCachingIntegrationTests" name="SourceGenerator_ComplexServiceInteractions_Works" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.ParameterTypeIntegrationTests.SourceGenerator_ComplexParameterTypes_Works" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="f2ef9898-b5f3-f7ce-6b08-59b814848891">
      <Execution id="00145751-1422-487d-a585-2649f9ae47a5" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.ParameterTypeIntegrationTests" name="SourceGenerator_ComplexParameterTypes_Works" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests.SourceGenerator_NullValues_HandledCorrectly" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="02e991a4-ded6-70b2-c856-23a8a412837f">
      <Execution id="b792ef65-9e26-4543-9b87-a103752fb1f7" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests" name="SourceGenerator_NullValues_HandledCorrectly" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.GenericMethodIntegrationTests.SourceGenerator_GenericMethodsWithConstraints_Works" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="8a3bf8b1-2509-fbb4-29ee-66958e37330c">
      <Execution id="b670dd4c-5ff5-45a0-9739-dbe9a79fd352" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.GenericMethodIntegrationTests" name="SourceGenerator_GenericMethodsWithConstraints_Works" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.ConfigurationIntegrationTests.SourceGenerator_ConditionalCaching_Works" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="e07d12a4-7c0a-7190-fb0d-aa72ac20571c">
      <Execution id="f57262e4-ca99-46a1-92fd-4a329a185929" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.ConfigurationIntegrationTests" name="SourceGenerator_ConditionalCaching_Works" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.BasicCachingIntegrationTests.SourceGenerator_TagBasedInvalidation_Works" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="13e377db-62ea-8913-66a2-e737e3da0666">
      <Execution id="a4255a74-6343-4dc8-8e05-24e24acdc591" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.BasicCachingIntegrationTests" name="SourceGenerator_TagBasedInvalidation_Works" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.CustomKeyGeneratorIntegrationTests.SourceGenerator_KeyGeneratorWithDifferentParameters_Works" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="cdd3b638-2ef0-322b-3bcc-493762ed5160">
      <Execution id="53833430-d797-4189-ac0b-a2e174c6feb3" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.CustomKeyGeneratorIntegrationTests" name="SourceGenerator_KeyGeneratorWithDifferentParameters_Works" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.SimpleIntegrationTest.SourceGenerator_BasicCompilation_Works" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="7d985252-01f5-d943-e761-8ba11d2c739e">
      <Execution id="be419a97-8f42-423d-9800-ac27582f0949" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.SimpleIntegrationTest" name="SourceGenerator_BasicCompilation_Works" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.PerformanceConcurrencyIntegrationTests.SourceGenerator_ParallelBatchOperations_Efficient" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="ca44cf88-5e77-0ca8-9ff7-8a9ae71115ca">
      <Execution id="8af76f63-5376-4c1e-a883-60fc8d3c786d" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.PerformanceConcurrencyIntegrationTests" name="SourceGenerator_ParallelBatchOperations_Efficient" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.CustomKeyGeneratorIntegrationTests.SourceGenerator_CustomKeyGenerator_Works" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="c94b0896-4ef9-1852-0594-ab0bb6f778ef">
      <Execution id="a7814674-2f7f-422a-87f6-4d7eda5737d1" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.CustomKeyGeneratorIntegrationTests" name="SourceGenerator_CustomKeyGenerator_Works" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.ConfigurationIntegrationTests.SourceGenerator_CustomKeyGenerator_Works" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="05dcc751-6e04-47e8-af13-418ea60e2c45">
      <Execution id="54ffb153-2512-4b60-82eb-eab3ed96705d" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.ConfigurationIntegrationTests" name="SourceGenerator_CustomKeyGenerator_Works" />
    </UnitTest>
    <UnitTest name="MethodCache.SourceGenerator.IntegrationTests.Tests.InheritanceIntegrationTests.SourceGenerator_MultipleInterfaceImplementation_Works" storage="/users/johan/dev/methodcache/methodcache.sourcegenerator.integrationtests/bin/debug/net9.0/methodcache.sourcegenerator.integrationtests.dll" id="c59d35c0-3312-f6db-c4f0-b18e6588d5bd">
      <Execution id="92605314-ad02-40ed-b1e6-1a44b72f6b7a" />
      <TestMethod codeBase="/Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/bin/Debug/net9.0/MethodCache.SourceGenerator.IntegrationTests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="MethodCache.SourceGenerator.IntegrationTests.Tests.InheritanceIntegrationTests" name="SourceGenerator_MultipleInterfaceImplementation_Works" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="c9425ab3-a691-6f3b-546b-bdd2fccda3c6" executionId="61fd6de0-e96e-4141-a7aa-3caadeae08cc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bcad10c5-0119-ef14-3997-f3e0487007aa" executionId="dd8e862b-45cd-4f76-8cde-82ccf9925a7b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="13e377db-62ea-8913-66a2-e737e3da0666" executionId="a4255a74-6343-4dc8-8e05-24e24acdc591" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8fdcfc54-962d-e05f-16c2-f84c84688da2" executionId="77b188b0-9610-4f20-ae10-e139f8ebc144" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f09b4a96-f714-a0e0-4380-92992fbf9f1d" executionId="b04f276c-de6c-4f44-818a-d6ccb2ee857f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a87e77e0-7f28-ecf5-b0ca-7cfe82635660" executionId="02742959-ad77-408f-b0b1-56a03988ec32" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bb722e2f-c11e-4a1c-83d4-b0876e521566" executionId="945ca1b3-f603-4483-bc41-6bfeb6333b29" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1f7ba3f5-4b35-ad8d-91ec-128326fac211" executionId="b4b70d78-3295-4336-a992-fc349565f500" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="05dcc751-6e04-47e8-af13-418ea60e2c45" executionId="54ffb153-2512-4b60-82eb-eab3ed96705d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e07d12a4-7c0a-7190-fb0d-aa72ac20571c" executionId="f57262e4-ca99-46a1-92fd-4a329a185929" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c60e4834-caed-b9f4-25f0-5706ca4910f5" executionId="58c42749-d3d7-45ef-bb5a-b476cd0656c9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="73bd7da3-b2a5-7f60-35b2-d708300a26b4" executionId="8000ed75-3eca-42f7-9642-ad94d2822e99" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="578b2d83-7f94-4ed6-3241-fa14aa0509b2" executionId="db9cb4e3-b9ca-4ddf-aff5-3a8123057e08" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cdd3b638-2ef0-322b-3bcc-493762ed5160" executionId="53833430-d797-4189-ac0b-a2e174c6feb3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="21408146-97a3-fe04-1a2f-0cdc7fcd7eed" executionId="27aab760-8723-4cc5-87ff-cb9f9d71ecf0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c59d35c0-3312-f6db-c4f0-b18e6588d5bd" executionId="92605314-ad02-40ed-b1e6-1a44b72f6b7a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8c5d45a6-2f3a-e260-a75c-d71a31d6bac2" executionId="55a13be0-f8d9-4f93-8dd6-ef14e92f2988" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7d985252-01f5-d943-e761-8ba11d2c739e" executionId="be419a97-8f42-423d-9800-ac27582f0949" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c94b0896-4ef9-1852-0594-ab0bb6f778ef" executionId="a7814674-2f7f-422a-87f6-4d7eda5737d1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b371d2a9-f83b-9810-67c5-e5bb550a10af" executionId="f430a5af-5714-4b13-b7d1-77122b243a40" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="719672fb-f0df-ce53-8519-f4c8d1d646bf" executionId="a82e4fd4-66e6-4615-afb1-02a00b441f33" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="02e991a4-ded6-70b2-c856-23a8a412837f" executionId="b792ef65-9e26-4543-9b87-a103752fb1f7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6264507a-f2fb-e996-f090-aac908968454" executionId="a17e2897-7cc4-420e-8b52-9eea83cc484d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ca44cf88-5e77-0ca8-9ff7-8a9ae71115ca" executionId="8af76f63-5376-4c1e-a883-60fc8d3c786d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f2ef9898-b5f3-f7ce-6b08-59b814848891" executionId="00145751-1422-487d-a585-2649f9ae47a5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8a3bf8b1-2509-fbb4-29ee-66958e37330c" executionId="b670dd4c-5ff5-45a0-9739-dbe9a79fd352" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="26" executed="26" passed="23" failed="3" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v3.1.1+bf6400fd51 (64-bit .NET 9.0.9)
[xUnit.net 00:00:00.04]   Discovering: MethodCache.SourceGenerator.IntegrationTests
[xUnit.net 00:00:00.05]   Discovered:  MethodCache.SourceGenerator.IntegrationTests
[xUnit.net 00:00:00.06]   Starting:    MethodCache.SourceGenerator.IntegrationTests
[xUnit.net 00:00:01.63]       System.InvalidOperationException : Task type System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[System.Collections.Generic.List`1[TestNamespace.Product],MethodCache.SourceGenerator.IntegrationTests.Infrastructure.TestMockCacheManager+&lt;GetOrCreateAsync&gt;d__3`1[System.Collections.Generic.List`1[TestNamespace.Product]]] is not compatible with expected type Task&lt;IList&gt;
[xUnit.net 00:00:01.63]       Stack Trace:
[xUnit.net 00:00:01.63]         /Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/Tests/ErrorHandlingIntegrationTests.cs(492,0): at MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests.GetTaskResult[T](Task task)
[xUnit.net 00:00:01.63]         /Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/Tests/ErrorHandlingIntegrationTests.cs(455,0): at MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests.SourceGenerator_LargeObjects_HandledCorrectly()
[xUnit.net 00:00:01.63]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.71]       System.InvalidOperationException : Task type System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[System.String,MethodCache.SourceGenerator.IntegrationTests.Infrastructure.TestMockCacheManager+&lt;GetOrCreateAsync&gt;d__3`1[System.String]] is not compatible with expected type Task&lt;String&gt;
[xUnit.net 00:00:01.71]       Stack Trace:
[xUnit.net 00:00:01.71]         /Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/Tests/ErrorHandlingIntegrationTests.cs(492,0): at MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests.GetTaskResult[T](Task task)
[xUnit.net 00:00:01.71]         /Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/Tests/ErrorHandlingIntegrationTests.cs(107,0): at MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests.SourceGenerator_ExceptionHandling_DoesNotCacheExceptions()
[xUnit.net 00:00:01.71]         --- End of stack trace from previous location ---
[xUnit.net 00:00:01.76]       System.InvalidOperationException : Task type System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[System.String,MethodCache.SourceGenerator.IntegrationTests.Infrastructure.TestMockCacheManager+&lt;GetOrCreateAsync&gt;d__3`1[System.String]] is not compatible with expected type Task&lt;String&gt;
[xUnit.net 00:00:01.76]       Stack Trace:
[xUnit.net 00:00:01.76]         /Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/Tests/ErrorHandlingIntegrationTests.cs(492,0): at MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests.GetTaskResult[T](Task task)
[xUnit.net 00:00:01.76]         /Users/johan/dev/MethodCache/MethodCache.SourceGenerator.IntegrationTests/Tests/ErrorHandlingIntegrationTests.cs(233,0): at MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests.SourceGenerator_NullValues_HandledCorrectly()
[xUnit.net 00:00:01.76]         --- End of stack trace from previous location ---
[xUnit.net 00:00:06.65]   Finished:    MethodCache.SourceGenerator.IntegrationTests
</StdOut>
    </Output>
    <RunInfos>
      <RunInfo computerName="tigger" outcome="Error" timestamp="2025-09-20T15:27:15.1863340+02:00">
        <Text>[xUnit.net 00:00:01.63]     MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests.SourceGenerator_LargeObjects_HandledCorrectly [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="tigger" outcome="Error" timestamp="2025-09-20T15:27:15.2679880+02:00">
        <Text>[xUnit.net 00:00:01.71]     MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests.SourceGenerator_ExceptionHandling_DoesNotCacheExceptions [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="tigger" outcome="Error" timestamp="2025-09-20T15:27:15.3206050+02:00">
        <Text>[xUnit.net 00:00:01.76]     MethodCache.SourceGenerator.IntegrationTests.Tests.ErrorHandlingIntegrationTests.SourceGenerator_NullValues_HandledCorrectly [FAIL]</Text>
      </RunInfo>
    </RunInfos>
  </ResultSummary>
</TestRun>